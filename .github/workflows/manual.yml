name: Deploy to EC2

on:
  push:
    branches:
      - main  # Adjust this to your main branch name

jobs:
  deploy:
    runs-on: ubuntu-latest  # You can choose the OS that fits your EC2 instance

    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_HOST: ubuntu@13.40.19.4
      SSH_IDENTITY_FILE: ~/.ssh/id_rsa
      PROJECT_NAME: ${{ github.event.repository.name }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create SSH key file and directory
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
      shell: /bin/bash -e {0}
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: SSH into EC2 and delete existing files
      run: |
        ssh -vvv -o "StrictHostKeyChecking=no" -i $SSH_IDENTITY_FILE $SSH_HOST << EOF
          # Remove existing files and directories in the destination path
          rm -rf /projects/$PROJECT_NAME/*
        EOF

    - name: Copy code to EC2
      run: |
        ssh -vvv -i $SSH_IDENTITY_FILE $SSH_HOST "sudo mkdir -p /projects/$PROJECT_NAME"
        echo "Passed here oo"

    - name: SSH into EC2 and deploy Node.js 18
      run: |
        ssh -vvv -i $SSH_IDENTITY_FILE $SSH_HOST << EOF
          # Change to your application directory
          cd /projects/$PROJECT_NAME
          # Check if the project directory exists
          if [ -d $PROJECT_NAME ]; then
            # The project directory exists, update the code with Git
            cd $PROJECT_NAME
            git pull
          else
            # The project directory doesn't exist, no need to clone
            echo "Project directory does not exist."
          fi
          # Install Node.js dependencies
          npm install
          # Start your Node.js application with PM2 using npm run dev
          pm2 restart $PROJECT_NAME --update-env || pm2 start "npm run dev -p" --name $PROJECT_NAME
        EOF
